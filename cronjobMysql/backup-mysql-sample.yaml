apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-script-inicial
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS usuarios_db;
    USE usuarios_db;
    CREATE TABLE IF NOT EXISTS usuarios(
      id INT AUTO_INCREMENT PRIMARY KEY,
      nombre VARCHAR(100),
      apellido VARCHAR(100),
      edad INT
    );
    INSERT INTO usuarios (nombre, apellido, edad) VALUES ('Juan', 'Gonzales', 30);
    INSERT INTO usuarios (nombre, apellido, edad) VALUES ('Marcos', 'Cruz', 50);

---
apiVersion: v1
kind: Pod
metadata:
  name: mysql-pod
spec:
  containers:
  - name: mysql-container
    image: mysql:8.0
    env:
    - name: MYSQL_ROOT_PASSWORD
      value: rootpassword
    - name: MYSQL_DATABASE
      value: usuarios_db
    ports:
    - containerPort: 3306
    volumeMounts:
    - name: mysql-data
      mountPath: /var/lib/mysql
    - name: init-scripts
      mountPath: /docker-entrypoint-initdb.d
  volumes:
  - name: mysql-data
    emptyDir: {}
  - name: init-scripts
    configMap:
      name: mysql-script-inicial

---

apiVersion: batch/v1
kind: CronJob
metadata:
  name: mysql-backup
spec:
  schedule: "*/5 * * * *" # cada 5 minutos
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: mysql-backup-container
            image: mysql:8.0
            command:
            - "sh"
            - "-c"
            - |
              # se conecta al pod de mysql y realiza un backup
              mysqldump -h mysql-pod -u root -prootpassword usuarios_db > /backups/usuarios_db_backup.sql
            volumeMounts:
            - name: backup-volume
              mountPath: /backups
          restartPolicy: OnFailure
          volumes:
          - name: backup-volume
            emptyDir: {}
          